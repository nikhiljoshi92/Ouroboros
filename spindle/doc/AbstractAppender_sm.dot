digraph AbstractAppender {

    node
        [shape=Mrecord width=1.5];

    subgraph cluster_AbstractAppenderFSM {

        label="AbstractAppenderFSM";

        //
        // States (Nodes)
        //

        "AbstractAppenderFSM::Ready"
            [label="{Ready}"];

        "AbstractAppenderFSM::ReadBatch"
            [label="{ReadBatch}"];

        "AbstractAppenderFSM::ReadBatchHeader"
            [label="{ReadBatchHeader}"];

        "AbstractAppenderFSM::CheckDuplicate"
            [label="{CheckDuplicate}"];

        "AbstractAppenderFSM::Append"
            [label="{Append}"];

        "AbstractAppenderFSM::DevNull"
            [label="{DevNull}"];

        "AbstractAppenderFSM::Closed"
            [label="{Closed}"];

        "%start"
            [label="" shape=circle style=filled fillcolor=black width=0.25];

        //
        // Transitions (Edges)
        //

        "AbstractAppenderFSM::Ready" -> "AbstractAppenderFSM::ReadBatch"
            [label="readReady/\l"];

        "AbstractAppenderFSM::Ready" -> "AbstractAppenderFSM::Closed"
            [label="close/\l"];

        "AbstractAppenderFSM::ReadBatch" -> "AbstractAppenderFSM::DevNull"
            [label="drain/\l"];

        "AbstractAppenderFSM::ReadBatch" -> "AbstractAppenderFSM::Append"
            [label="append/\l"];

        "AbstractAppenderFSM::ReadBatch" -> "AbstractAppenderFSM::ReadBatchHeader"
            [label="readBatchHeader/\l"];

        "AbstractAppenderFSM::ReadBatch" -> "AbstractAppenderFSM::Ready"
            [label="consumed/\l"];

        "AbstractAppenderFSM::ReadBatch" -> "AbstractAppenderFSM::Closed"
            [label="close/\l"];

        "AbstractAppenderFSM::ReadBatchHeader" -> "AbstractAppenderFSM::Closed"
            [label="readReady/\l"];

        "AbstractAppenderFSM::ReadBatchHeader" -> "AbstractAppenderFSM::CheckDuplicate"
            [label="readReady/\l"];

        "AbstractAppenderFSM::ReadBatchHeader" -> "AbstractAppenderFSM::Closed"
            [label="close/\l"];

        "AbstractAppenderFSM::CheckDuplicate" -> "AbstractAppenderFSM::Append"
            [label="append/\l"];

        "AbstractAppenderFSM::CheckDuplicate" -> "AbstractAppenderFSM::DevNull"
            [label="drain/\l"];

        "AbstractAppenderFSM::CheckDuplicate" -> "AbstractAppenderFSM::Closed"
            [label="close/\l"];

        "AbstractAppenderFSM::Append" -> "AbstractAppenderFSM::Closed"
            [label="readReady/\l"];

        "AbstractAppenderFSM::Append" -> "AbstractAppenderFSM::Ready"
            [label="readReady/\l"];

        "AbstractAppenderFSM::Append" -> "AbstractAppenderFSM::Closed"
            [label="close/\l"];

        "AbstractAppenderFSM::DevNull" -> "AbstractAppenderFSM::ReadBatch"
            [label="ready/\l"];

        "AbstractAppenderFSM::DevNull" -> "AbstractAppenderFSM::Closed"
            [label="readReady/\l"];

        "AbstractAppenderFSM::DevNull" -> "AbstractAppenderFSM::Ready"
            [label="readReady/\l"];

        "AbstractAppenderFSM::DevNull" -> "AbstractAppenderFSM::Closed"
            [label="close/\l"];

        "AbstractAppenderFSM::Closed" -> "AbstractAppenderFSM::Closed"
            [label="close/\l"];

        "%start" -> "AbstractAppenderFSM::Ready"
    }

}
