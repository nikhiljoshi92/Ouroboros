digraph Replicator {

    node
        [shape=Mrecord width=1.5];

    subgraph cluster_ReplicatorFSM {

        label="ReplicatorFSM";

        //
        // States (Nodes)
        //

        "ReplicatorFSM::Suspended"
            [label="{Suspended}"];

        "ReplicatorFSM::Established"
            [label="{Established}"];

        "ReplicatorFSM::InboundHandshake"
            [label="{InboundHandshake}"];

        "ReplicatorFSM::OutboundHandshake"
            [label="{OutboundHandshake}"];

        "ReplicatorFSM::Closed"
            [label="{Closed}"];

        "%start"
            [label="" shape=circle style=filled fillcolor=black width=0.25];

        //
        // Transitions (Edges)
        //

        "ReplicatorFSM::Suspended" -> "ReplicatorFSM::Established"
            [label="established/\l"];

        "ReplicatorFSM::Suspended" -> "ReplicatorFSM::OutboundHandshake"
            [label="initiateHandshake/\l"];

        "ReplicatorFSM::Suspended" -> "ReplicatorFSM::InboundHandshake"
            [label="acceptHandshake/\l"];

        "ReplicatorFSM::InboundHandshake" -> "ReplicatorFSM::Closed"
            [label="readReady/\l"];

        "ReplicatorFSM::InboundHandshake" -> "ReplicatorFSM::Established"
            [label="readReady/\l"];

        "ReplicatorFSM::InboundHandshake" -> "ReplicatorFSM::Established"
            [label="established/\l"];

        "ReplicatorFSM::OutboundHandshake" -> "ReplicatorFSM::Closed"
            [label="writeReady/\l"];

        "ReplicatorFSM::OutboundHandshake" -> "ReplicatorFSM::Established"
            [label="writeReady/\l"];

        "ReplicatorFSM::OutboundHandshake" -> "ReplicatorFSM::Established"
            [label="established/\l"];

        "%start" -> "ReplicatorFSM::Suspended"
    }

}
